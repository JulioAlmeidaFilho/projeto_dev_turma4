- hosts: 
  - ec2-mysql-stage
  tasks:
    - name: "Configura hostname ec2-mysql-stage"
      shell: hostname ec2-mysql-stage && echo "ec2-mysql-stage" > /etc/hostname
      become: yes
# ---
- hosts: all
  environment:
    PASSWORD: "{{ lookup('env', 'DB_PASSWORD') }}"

  tasks:
    - name: "Roda: sudo apt update"
      become: yes
      apt:
        update_cache: yes
        #upgrade: yes

    - name: "Instala pacotes"
      apt:
        name: "{{ item }}"
        state: latest
      become: yes
      with_items:
        - mysql-server
        - python3-pycurl
        - python3-mysqldb


    - name: "Lavanta servi√ßo do mysql"
      become: yes
      service:
        name: mysql
        state: started
    
    - name: "Alterando senha usuario SQL"
      become: yes
      mysql_user:
        name: "root"
        host_all: true
        password: "{{ lookup('env', 'DB_PASSWORD') }}"
        priv: "*.*:ALL,GRANT"
        state: present
        check_implicit_admin: true

    - name: "Tornando senha nova visivel para o Ansible"
      become: yes
      copy:
        src: "dumpsql/.my.cnf"
        dest: "/root/.my.cnf"
        owner: root
        mode: 0600

    - name: "Libera acesso MySQL"
      become: yes
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
    
    - name: "Libera acesso MySQL"
      become: yes
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^mysqlx-bind-address'
        line: 'mysqlx-bind-address = 0.0.0.0'
    
    - name: "Libera pacesso externo a database"
      become: yes
      shell: "mysql -uroot -p'{{ lookup('env', 'DB_PASSWORD') }}' --execute=\"CREATE USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '{{ lookup('env', 'DB_PASSWORD') }}'; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'; FLUSH PRIVILEGES;\""

    - name: "Restart mysql"
      become: yes
      shell: "service mysql restart"